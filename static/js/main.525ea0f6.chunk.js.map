{"version":3,"sources":["utils/consts.js","components/main/Main.jsx","components/login/Login.jsx","redux/auth-reducer.js","components/login/LoginContainer.jsx","components/info/Info.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","components/calendar/svg/LeftBtn.jsx","components/calendar/svg/RightBtn.jsx","components/calendar/days/Days.jsx","components/calendar/modal/Modal.jsx","components/calendar/svg/Search.jsx","components/calendar/filter/Filter.jsx","components/calendar/Calendar.jsx","redux/calendar-reducer.js","components/calendar/CalendarContainer.jsx","components/friends/tbody/FriendsTbody.jsx","components/friends/Friends.jsx","redux/friends-reducer.js","components/friends/FriendsContainer.jsx","routes.js","components/AppRouter.js","components/header/Header.jsx","components/header/HeaderContainer.jsx","App.js","redux/redux-store.js","reportWebVitals.js","index.js"],"names":["MAIN_R","LOGIN_R","PROFILE_R","INFO_R","CALENDAR_R","FRIENDS_R","Main","className","React","memo","Login","error","isAuth","login","inputUsername","useRef","inputPassword","redirect","to","type","ref","placeholder","autoComplete","onClick","username","current","value","trim","password","SET_USER_DATA","initialState","setAuthUserData","data","authReducer","state","action","LoginContainer","connect","auth","dispatch","Info","dir","style","color","Profile","userEvents","events","map","e","dateTime","title","name","uId","src","alt","marginTop","ProfileContainer","calendar","LeftBtn","cursor","xmlns","width","height","fill","viewBox","d","RightBtn","days","Days","week","id_week","onSelectDate","selectDate","onCurrentDate","each","day","Date","getDate","length","month","getMonth","today","getFullYear","jsDate","dateTimeEvents","eventsDay","includes","filter","fe","fontSize","id_day","onClickSelectDate","date","JSON","stringify","Modal","addEvent","updEvent","cancel","titleEl","nameEl","console","log","undefined","condition","editDate","slice","position","top","right","defaultValue","disabled","Search","marginRight","emptyMsgStyle","display","justifyContent","alignItems","Filter","filterEl","useState","isFocus","setIsFocus","setValue","eventsToString","onFocus","onBlur","onChange","event","eventFiltred","target","datesGenerator","require","months","Calendar","setSelectDate","isShowModal","modal","setModal","dates","setDates","year","startingDay","setCalendar","useEffect","body","nextMonth","nextYear","previousMonth","previousYear","dateElements","forEach","tmp","SET_EVENT","UPD_EVENT","calendarReducer","Math","max","uid","newEvents","CalendarContainer","setEvent","updEventInfo","FriendsTbody","user","onSetUserData","onSetEditMode","onSetActive","ageEl","genderEl","birthdayEl","isEdit","id","isActive","age","gender","birthday","stopPropagation","newName","newAge","newGender","newBirthday","padding","Friends","columns","users","tableColumns","i","background","zIndex","tbody","activeUsers","u","minWidth","tableLayout","reduce","acc","cur","SET_EDIT_MODE","SET_ACTIVE_MODE","tableData","friendsReducer","newUsersData","FriendsContainer","friends","setUserData","setEditMode","setActive","publicRoutes","path","Component","privateRoutes","AppRouter","component","exact","Header","logout","navlink","route","r","activeClassName","HeaderContainer","a","App","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.525ea0f6.chunk.js","sourcesContent":["export const MAIN_R = '/'\r\nexport const LOGIN_R = '/login'\r\nexport const PROFILE_R = '/profile'\r\nexport const INFO_R = '/info'\r\nexport const CALENDAR_R = '/calendar'\r\nexport const FRIENDS_R = '/friends'","import React from 'react';\r\nimport './Main.css';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className='main'>\r\n            <h1>Главная страница</h1>\r\n            <div className='main-content'>\r\n                <h2>Описание задачи:</h2>\r\n                <p>\r\n                    Реализовать приложение, которое будет отображать несколько страниц, в зависимости от url браузера. Серверную часть программировать не нужно. Оформление и дизайн на ваше усмотрение, проявите творчество, сделайте так, чтобы можно было комфортно смотреть на приложение в браузере.\r\n                </p>\r\n                <p>\r\n                    Необходимо решить задание, используя следующий стек технологий:\r\n                </p>\r\n                <ol>\r\n                    <li>JavaScript</li>\r\n                    <li>Web-фреймворк на выбор:</li>\r\n                    <li>React/Redux</li>\r\n                    <li>Angular/NgRx</li>\r\n                    <li>CSS - не использовать сторонних CSS-библиотек или препроцессоров</li>\r\n                </ol>\r\n                <p>Описание страниц:</p>\r\n                <ol>\r\n                    <li>/ - главная страница.</li>\r\n                    <li>/login - Авторизация - страница авторизации.</li>\r\n                    <li>/profile - Профиль - страница, которая отображает любую информацию об авторизованном пользователе. Должна быть закрыта без авторизации.</li>\r\n                    <li>/info - Информация - страница с любой однородной информацией.</li>\r\n                </ol>\r\n                <p>Реализовать боковую или верхнюю панель навигации, которая будет отображаться на всех страницах приложения и содержать ссылки на главную страницу, на страницу с информацией (/info) и на страницу пользователя (/profile).</p>\r\n                <p>Реализовать переход на страницу Авторизация при попытке войти в Профиль, если пользователь не авторизован.</p>\r\n                <p>Реализовать отображение имени авторизованного пользователя на панели навигации.</p>\r\n                <p>Для авторизации пользователя использовать фейковые данные username: Admin, password: 12345678.</p>\r\n                <p>При вводе правильных данных необходимо реализовать переход на страницу профиля пользователя.</p>\r\n                <p>При попытке ввести некорректные данные отображать сообщение \"Имя пользователя или пароль введены неверно\".</p>\r\n                <p>Реализовать в приложении хотя бы один из двух описанных ниже дополнительных разделов на выбор: Календарь или Таблицу с данными.</p>\r\n                \r\n                <h2>Календарь</h2>\r\n                <p>Реализовать страницу календаря (/calendar) в соответствии с макетом.</p>\r\n                <p>Страница должна быть закрыта без авторизации.</p>\r\n                <p>Реализовать Добавление/Редактирование событий пользователя в календарь.</p>\r\n                <p>Реализовать переход по месяцам.</p>\r\n                <p>Реализовать поиск событий в календаре.</p>\r\n                <p>На странице Профиль отобразить созданные события пользователя.</p>\r\n\r\n                <h2>Таблица с данными</h2>\r\n                <p>Реализовать в приложении страницу, на которой будет отображена таблица с данными. Путь url, по которому страница будет доступна в приложении, на ваше усмотрение.</p>\r\n                <p>Страница должна быть закрыта без авторизации.</p>\r\n                <p>Исходные данные для таблицы реализовать в json формате и поместить в отдельный json файл. Какие именно данные на ваше усмотрение, проявите фантазию.</p>\r\n                <p>Количество колонок и строк должно быть таким, чтобы в таблице отображались горизонтальная и вертикальная полосы прокрутки.</p>\r\n                <p>Заголовки колонок таблицы должны быть зафиксированными, чтобы при вертикальном скролле они всегда отображалась на экране.</p>\r\n                <p>Первая колонка должна быть зафиксирована, чтобы при горизонтальном скролле она всегда отображалась на экране.</p>\r\n                <p>Реализовать выделение строк таблицы. Выделите любым цветом, на ваше усмотрение рамки, строки.</p>\r\n                <p>Реализовать панель состояния вверху или внизу таблицы, на которой должно быть отображено общее количество данных и количество выделенных строк в таблице.</p>\r\n                <p>Реализовать редактирование ячеек таблицы.</p>\r\n\r\n                <h2>Дополнительные условия</h2>\r\n                <p>Код приложения поместить в GitHub репозиторий с описанием.</p>\r\n                <p>Каждую отдельную задачу тестового задания оформить отдельным коммитом.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Main);","import React, { useRef } from 'react';\r\nimport { PROFILE_R } from '../../utils/consts';\r\nimport { Redirect } from 'react-router-dom'\r\nimport './Login.css';\r\n\r\nconst Login = ({ error, isAuth, login }) => {\r\n\r\n    const inputUsername = useRef(null);\r\n    const inputPassword = useRef(null);\r\n\r\n    const onLoginClick = () => {\r\n        const username = inputUsername.current.value.trim();\r\n        const password = inputPassword.current.value.trim();\r\n\r\n        login(username, password);\r\n    };\r\n\r\n    const redirect = (isAuth)&& <Redirect to={PROFILE_R} />;\r\n\r\n    return (\r\n        <div className='login'>\r\n            {redirect}\r\n            <div className='form'>\r\n                <h1>Login</h1>\r\n                <div className=\"form-input-material\">\r\n                    <input type=\"text\" ref={inputUsername} placeholder=\"Логин\" autoComplete=\"off\" className=\"form-control-material\" />\r\n                </div>\r\n                <div className=\"form-input-material\">\r\n                    <input type=\"password\" ref={inputPassword} placeholder=\"Пароль\" autoComplete=\"off\" className=\"form-control-material\" />\r\n                </div>\r\n                <span className=\"error\">{error ? error : <><br /><br /></>}</span>\r\n                <div className=\"btn btn-ghost\" onClick={onLoginClick}>Войти</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Login);","\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    username: null,\r\n    error: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setAuthUserData = (username, error, isAuth) => ({\r\n    type: SET_USER_DATA, data:\r\n        { username, error, isAuth }\r\n});\r\n\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n    if (username === 'Admin' && password === '12345678') {\r\n        dispatch(setAuthUserData(username, null, true));\r\n    } else {\r\n        dispatch(setAuthUserData(null, 'Имя пользователя или пароль введены неверно', false));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    dispatch(setAuthUserData(null, null, false));\r\n};\r\n\r\nexport default authReducer;","import Login from './Login';\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.auth.error,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nconst LoginContainer = connect(mapStateToProps, { login })(Login);\r\n\r\nexport default LoginContainer;\r\n\r\n","import React from 'react';\r\nimport './Info.css';\r\n\r\nconst Info = () => {\r\n    return (\r\n        <div className='info'>\r\n            <h1>Информация про философию JazzTeam Software Development Company</h1>\r\n            <h3 dir=\"ltr\"><span style={{ color: '#2550d9;' }}>Киты, на которых стоит наша философия</span></h3>\r\n            <p><strong>Результат</strong></p>\r\n            <p dir=\"ltr\">Мерило вашего трудового дня. Должен быть. Думаем о конкретике. Пробуем точно понять, что ожидается от вас в таске, и чётко представлять условия, критерии завершения работы над таском.</p>\r\n            <p dir=\"ltr\"> <strong>Engineering (Инженерия)</strong></p>\r\n            <p dir=\"ltr\">Programming is an engineering. Not just coding. Engineering is a serious process where maturity plays main role. (Программирование – это инженерная наука. Не просто кодирование. Инженерия – серьёзный процесс, где зрелость и серьёзность играют важнейшую роль).</p>\r\n            <p><strong>Реалистичность</strong></p>\r\n            <p dir=\"ltr\">Наиболее важна – показывает, правильно ли мы понимаем реальность. В сроках, в оценках, в ожиданиях. Реалистичность тесно связана с работой на результат. Иногда наше ложное эго мешает нам смотреть реально на вещи, иногда наши страхи мешают понять, что именно от тебя требует руководитель.</p>\r\n            <p><strong>Инновации</strong></p>\r\n            <p dir=\"ltr\">Как гарант отсутствия старпёрства и нежелания развиваться дальше. Как гарант увеличения добавленной стоимости команды. Как мерило уровня творчества команды.</p>\r\n            <p><strong>Развитие мышления</strong></p>\r\n            <p dir=\"ltr\">Не делать машинально, но понимать, что делаешь. Понимать, чем что вызвано. Ясно, чисто, позитивно осознавать задание, проект. Вы – не чародеи, вы – инженеры. Никогда не стоит видеть чёрные тучи на проекте, никогда не стоит бояться. Стоит делать всё возможное, чтобы мышление на проекте было светлое.</p>\r\n            <p><strong>Самостоятельность</strong></p>\r\n            <p dir=\"ltr\">Как показатель умения поставить себя на место другого человека, задать вопросы, которые нужно задать. Как показатель желания двигать проект в нужную сторону. Как показатель уважения к своим коллегам, которым не нужно напоминать вам детские вещи.</p>\r\n            <p><strong>Команда</strong></p>\r\n            <p dir=\"ltr\">Только со слаженной командой можно разрабатывать классные, сложные, высоко-технологические, интересные программные системы. Проект даётся не человеку, но команде. В конечном итоге, проблемы каждого становятся проблемами команды. Командная работа – это и дружелюбие, и сострадание, и взаимоуважение, и сплоченность, подстраховка.</p>\r\n            <p><strong>Трудолюбие</strong></p>\r\n            <p dir=\"ltr\">Ра-Ботать (говорить с Богом), а не Раб-Отать. Позитивное отношение к труду, к своим обязанностям. В конечном итоге – любая деятельность с позитивным отношением приносит кому-то пользу. В нашем случае – нашим заказчикам.</p>\r\n            <p><strong>Саморазвитие</strong></p>\r\n            <p dir=\"ltr\">Развиваешься в жизни – развиваешься и как профессионал. И наоборот! Черты характера в жизни полностью переходят на черты характера в программировании. Развивайтесь. Не стремитесь всего достичь сразу. Делайте главный свой фокус саморазвитием. Думайте о долгосрочной перспективе.</p>\r\n            <p><strong>Ответственность</strong></p>\r\n            <p dir=\"ltr\">Перед собой. Перед заказчиком. Перед командой. Мерило осознанности и понимания, зачем всё это делается.</p>\r\n            <p><strong>Архитектура</strong></p>\r\n            <p dir=\"ltr\">Создается перед программированием. Очень важное инвестирование. Как фундамент вашего дома. Мы всегда знаем, почему применили данное решение, можем рационально это объяснить. Можем объяснить в стиле “для тупых”, можем объяснить очень сложное просто.</p>\r\n            <p><strong>Искренность</strong></p>\r\n            <p dir=\"ltr\">Нам нечего бояться. Мы верим, что искренность помогает человеку быть полноценным, неэгоистичным, бесстрашным, более счастливым.</p>\r\n            <p><strong>Уважение</strong></p>\r\n            <p dir=\"ltr\">Как показатель зрелости члена команды. Зрелость – это возможность следовать не только своим интересам, но и интересам других людей, любить и уважать не только себя, но и своих коллег.</p>\r\n            <p><strong>Неформальность</strong></p>\r\n            <p dir=\"ltr\">Как показатель уважения, отсутствия очковтирательства и чародейства в программировании. Это сложно – быть неформальным в общении, но серьёзным в отношении к своим обязанностям на проекте.</p>\r\n            <p dir=\"ltr\"><strong>Интенсивность</strong></p>\r\n            <p dir=\"ltr\">А не экстенсивность. Качество и инновационность в программной индустрии помогает выиграть в количестве. Прямое отношение к архитектуре.</p>\r\n            <p><strong>Креативность</strong></p>\r\n            <p dir=\"ltr\">С мыслями о реалистичности. Голая креативность губит лучшие начинания, в то время в связке с рациональностью и прагматизмом помогает достичь цели.</p>\r\n            <p><strong>R&D</strong></p>\r\n            <p dir=\"ltr\">Research & Development – инвестиции в изучение, обучение, инновации, исследования, будущее.</p>\r\n            <p><strong>Живой интерес</strong></p>\r\n            <p dir=\"ltr\">Жить, работать, обучаться, программировать так, чтобы было интересно это делать, было интересно этим жить.</p>\r\n            <p><strong>Jazz Funk Swing</strong></p>\r\n            <p dir=\"ltr\">Весело, радостно, с огоньком.</p>\r\n            <p><strong>Мобильность</strong></p>\r\n            <p dir=\"ltr\">Как отражение современного мира. Мобильность команды, места разработки, средств разработки. Отражением Funk-а и Agile.</p>\r\n            <p><strong>English: talk & write</strong></p>\r\n            <p dir=\"ltr\">Фокус на англоязычном мире.</p>\r\n            <p><strong>Обучение: study & teach</strong></p>\r\n            <p dir=\"ltr\">Передача опыта другим людям. Получение опыта других людей. Инвестиция в будущее. Развитие навыков общения и эффективной передачи знаний и опыта.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Info);","import React from 'react';\r\nimport './Profile.css';\r\n\r\nconst imgUrl = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTY5ZtMI-JUuiy9vblAsbVS6T5n-jXqYTLgyg&usqp=CAU'\r\n\r\nconst Profile = ({ username, events }) => {\r\n\r\n    let userEvents = events.map((e) => (\r\n        <div key={e.uId}>\r\n            <p>Время: {e.dateTime}</p>\r\n            <p>Тема: {e.title}</p>\r\n            <p>Имя: {e.name}</p>\r\n            <hr />\r\n        </div>))\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <div className='profile-avatar' >\r\n                <img src={imgUrl} alt=\"avatar\" />\r\n            </div>\r\n            <div className='profile-info'>\r\n                <p> Username: </p> <p>{username}</p>\r\n                <p>Имя:</p><p>Иван</p>\r\n                <p>О себе:</p><p>\r\n                    В последние годы проходил обучение.\r\n                    Желаю развиваться в профессиональной сфере.\r\n                    Изучал HTML, CSS, SCSS, Java Script, Type Script, GIT, React js, React-Redux, MobX, Rest API. Писал тесты. Работал с такими дизайн-системами как Ant Design и Bootstrap. Так же взаимодействовал с jQuery и Node.js, в том числе делал парсер сайта и бота для Discord.\r\n                    Окончил курсы IT-ACADEMY \"Курс React и Angular для разработки веб-приложений\".</p>\r\n            </div>\r\n            <h2>События:</h2>\r\n            <div style={{ marginTop: 6 }}>{userEvents}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Profile);","import Profile from './Profile';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.auth.username,\r\n        events: state.calendar.events,\r\n    }\r\n};\r\n\r\nconst ProfileContainer = connect(mapStateToProps)(Profile);\r\n\r\nexport default ProfileContainer;\r\n\r\n","import React from 'react';\r\n\r\nconst LeftBtn = ({ onClick }) => {\r\n    return (\r\n        <svg onClick={onClick} style={{ cursor: 'pointer' }} xmlns=\"http://www.w3.org/2000/svg\" width=\".6em\" height=\".6em\" fill=\"currentColor\" viewBox=\"0 0 16 16\"><path d=\"M14 1a1 1 0 011 1v12a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h12zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"></path><path d=\"M10.205 12.456A.5.5 0 0010.5 12V4a.5.5 0 00-.832-.374l-4.5 4a.5.5 0 000 .748l4.5 4a.5.5 0 00.537.082z\"></path></svg>\r\n    )\r\n}\r\n\r\nexport default React.memo(LeftBtn);","import React from 'react';\r\n\r\nconst RightBtn = ({ onClick }) => {\r\n    return (\r\n        <svg onClick={onClick} style={{ cursor: 'pointer' }} xmlns=\"http://www.w3.org/2000/svg\" width=\".6em\" height=\".6em\" fill=\"currentColor\"  viewBox=\"0 0 16 16\"><path d=\"M14 1a1 1 0 011 1v12a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h12zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\"></path><path d=\"M5.795 12.456A.5.5 0 015.5 12V4a.5.5 0 01.832-.374l4.5 4a.5.5 0 010 .748l-4.5 4a.5.5 0 01-.537.082z\"></path></svg>\r\n    )\r\n}\r\n\r\nexport default React.memo(RightBtn);","import React from 'react';\r\n\r\n\r\nconst days = ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье']\r\n\r\nconst Days = ({ week, id_week, onSelectDate, events, selectDate }) => {\r\n\r\n    const onCurrentDate = (each) => {\r\n\r\n        let day = new Date().getDate().length === 1 ? new Date().getDate() : '0' + new Date().getDate();\r\n        let month = new Date().getMonth().length === 1 ? new Date().getMonth() + 1 : '0' + (new Date().getMonth() + 1);\r\n\r\n        let today = `${day}.${month}.${new Date().getFullYear()}, 00:00:00`;\r\n\r\n        return each.jsDate === today;\r\n    }\r\n\r\n    const dateTimeEvents = events.map(e => e.dateTime)\r\n\r\n    const eventsDay = (each) => {\r\n        if (dateTimeEvents.includes(each.jsDate)) {\r\n            return events.filter(e => e.dateTime === each.jsDate).map((fe) => {\r\n                return (\r\n                    <div key={fe.uId}>\r\n                        <p>{fe.title}</p>\r\n                        <p style={{ fontSize: 10 }}>{fe.name}</p>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const onClickSelectDate = (each) => {\r\n        if (dateTimeEvents.includes(each.jsDate)) {\r\n            return events.filter(e => e.dateTime === each.jsDate).map((fe) => {\r\n                return onSelectDate(fe)\r\n            })\r\n        } else {\r\n            onSelectDate({ dateTime: each.jsDate })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <tr key={JSON.stringify(week)} className='calendar-week'>\r\n            {week.map((each, id_day) => (\r\n                <td\r\n                    key={JSON.stringify(each)}\r\n                    className={`calendar-day ${dateTimeEvents.includes(each.jsDate) && 'calenar-event'} ${onCurrentDate(each) && 'calendar-day-today'} ${selectDate?.dateTime === each.jsDate && 'calendar-day-active'} `}\r\n                    onClick={() => onClickSelectDate(each)}\r\n                >\r\n                    <p>\r\n                        {id_week === 0 && `${days[id_day]},`} {each.date}\r\n                        {eventsDay(each)}\r\n                    </p>\r\n                </td>\r\n            ))\r\n            }\r\n        </tr >\r\n    );\r\n}\r\n\r\nexport default React.memo(Days);","import React, { useRef } from 'react';\r\n\r\nconst Modal = ({ selectDate, addEvent, updEvent, cancel, type }) => {\r\n\r\n    const titleEl = useRef(null);\r\n    const nameEl = useRef(null);\r\n\r\n    const onClick = () => {\r\n        if (!condition) {\r\n            if (type === 'Добавить') {\r\n                addEvent(selectDate.dateTime, titleEl.current.value, nameEl.current.value)\r\n            } else {\r\n                updEvent(selectDate.dateTime, titleEl.current.value, nameEl.current.value, selectDate.uId)\r\n            }\r\n            cancel()\r\n        }\r\n    }\r\n    console.log(selectDate?.dateTime === undefined)\r\n\r\n    let condition = (type === 'Добавить' && selectDate?.uId !== undefined) || (type !== 'Добавить' && selectDate?.uId === undefined) || (selectDate?.dateTime === undefined)\r\n\r\n    let editDate = selectDate?.dateTime.slice(0, 10) || 'Выберите дату';\r\n\r\n    return (\r\n        <div className='calendar-modal'>\r\n            <div className='calendar-modal-container'>\r\n                <div>\r\n                    <div\r\n                        onClick={cancel}\r\n                        style={{ position: 'absolute', top: 0, right: 10, cursor: 'pointer' }}\r\n                    >\r\n                        x\r\n                    </div>\r\n                    {type}\r\n                    <p>{editDate}</p>\r\n                    <input ref={titleEl} type='text' placeholder='Название события' defaultValue={selectDate?.title} />\r\n                    <input ref={nameEl} type='text' placeholder='Участники' defaultValue={selectDate?.name} />\r\n                </div>\r\n                <input\r\n                    type=\"button\"\r\n                    className={`${condition && 'disabled'} btn-prime`}\r\n                    onClick={onClick}\r\n                    disabled={condition}\r\n                    value={type}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Modal);","import React from 'react';\r\n\r\nconst Search = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ marginRight: 10 }} width=\"1em\" height=\"1em\" fill=\"currentColor\" viewBox=\"0 0 16 16\" ><path d=\"M11.742 10.344a6.5 6.5 0 10-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 001.415-1.414l-3.85-3.85a1.007 1.007 0 00-.115-.1zM12 6.5a5.5 5.5 0 11-11 0 5.5 5.5 0 0111 0z\"></path></svg>)\r\n}\r\n\r\nexport default React.memo(Search);","import React, { useRef, useState } from 'react';\r\n\r\nconst emptyMsgStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n}\r\n\r\nconst Filter = ({ events }) => {\r\n    const filterEl = useRef(null);\r\n    const [isFocus, setIsFocus] = useState(false);\r\n    const [value, setValue] = useState('');\r\n\r\n    const eventsToString = events.map((e) => {\r\n        return {\r\n            ...e,\r\n            dateTime: e.dateTime.slice(0, 10)\r\n        }\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        let eventFiltred = eventsToString\r\n            .filter((e) => e.dateTime === event.target.value || e.title === event.target.value || e.name === event.target.value)\r\n            .map((e) => {\r\n                return (\r\n                    <p>{e.dateTime} - {e.title}:<br /> {e.name} <hr /></p>\r\n                )\r\n            })\r\n        setValue(eventFiltred)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                ref={filterEl}\r\n                type=\"text\"\r\n                placeholder='Событие, дата или участник'\r\n                onFocus={() => setIsFocus(true)}\r\n                onBlur={() => setIsFocus(false)}\r\n                onChange={handleChange}\r\n            />\r\n            {isFocus && (\r\n                <div className='calendar-filter'>\r\n                    {value.length ? value : <span style={emptyMsgStyle}>Нет совпадений</span>}\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Filter);","import React, { useState, useEffect } from 'react';\r\nimport LeftBtn from './svg/LeftBtn';\r\nimport RightBtn from './svg/RightBtn';\r\n\r\nimport './Calendar.css';\r\nimport Days from './days/Days';\r\nimport Modal from './modal/Modal';\r\nimport Search from './svg/Search';\r\nimport Filter from './filter/Filter';\r\n\r\nconst { datesGenerator } = require('dates-generator');\r\n\r\n\r\nconst months = ['Янв', 'Фев', 'Март', 'Апр', 'Май', 'Июнь', 'Июль', 'Авг', 'Сент', 'Окт', 'Ноя', 'Дек'];\r\n\r\nconst Calendar = ({ events, addEvent, updEvent }) => {\r\n\r\n    const [selectDate, setSelectDate] = useState();\r\n\r\n    const [modal, setModal] = useState({\r\n        isShowModal: false,\r\n        type: 'Добавить'\r\n    });\r\n\r\n    const [dates, setDates] = useState([]);\r\n    const [calendar, setCalendar] = useState({\r\n        month: new Date().getMonth(),\r\n        year: new Date().getFullYear(),\r\n        startingDay: 1,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            month: calendar.month,\r\n            year: calendar.year,\r\n            startingDay: 1,\r\n        };\r\n        const { dates, nextMonth, nextYear, previousMonth, previousYear } = datesGenerator(body);\r\n\r\n        setDates([...dates]);\r\n        setCalendar({\r\n            ...calendar,\r\n            nextMonth,\r\n            nextYear,\r\n            previousMonth,\r\n            previousYear\r\n        });\r\n    }, [])\r\n\r\n    const onClickToday = () => {\r\n        const body = {\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n            startingDay: 1,\r\n        };\r\n        const { dates, nextMonth, nextYear, previousMonth, previousYear } = datesGenerator(body);\r\n\r\n        setDates([...dates]);\r\n        setCalendar({\r\n            ...calendar,\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n            nextMonth,\r\n            nextYear,\r\n            previousMonth,\r\n            previousYear\r\n        });\r\n\r\n        // установка текущей даты\r\n        const onCurrentDate = (each) => {\r\n\r\n            let day = new Date().getDate().length === 1 ? new Date().getDate() : '0' + new Date().getDate();\r\n            let month = new Date().getMonth().length === 1 ? new Date().getMonth() + 1 : '0' + (new Date().getMonth() + 1);\r\n\r\n            let today = `${day}.${month}.${new Date().getFullYear()}, 00:00:00`;\r\n\r\n            return each.jsDate === today;\r\n        }\r\n\r\n        let each\r\n\r\n        dates.forEach((week) => {\r\n            let tmp = week.filter((day) => onCurrentDate(day))\r\n            each = tmp.length === 1 ? tmp : each;\r\n        })\r\n        const dateTimeEvents = events.map(e => e.dateTime)\r\n\r\n        each = each[0]\r\n\r\n        if (dateTimeEvents.includes(...each.jsDate)) {\r\n            return events.filter(e => e.dateTime === each.jsDate).map((fe) => {\r\n                return onSelectDate(fe)\r\n            })\r\n        } else {\r\n            onSelectDate({ dateTime: each.jsDate })\r\n        }\r\n\r\n    }\r\n\r\n    const onClickNext = () => {\r\n        const body = { month: calendar.nextMonth, year: calendar.nextYear, startingDay: 1 };\r\n        const { dates, nextMonth, nextYear, previousMonth, previousYear } = datesGenerator(body);\r\n\r\n        setDates([...dates]);\r\n        setCalendar({\r\n            ...calendar,\r\n            month: calendar.nextMonth,\r\n            year: calendar.nextYear,\r\n            nextMonth,\r\n            nextYear,\r\n            previousMonth,\r\n            previousYear\r\n        });\r\n    }\r\n\r\n    const onClickPrev = () => {\r\n        const body = { month: calendar.previousMonth, year: calendar.previousYear, startingDay: 1 };\r\n        const { dates, nextMonth, nextYear, previousMonth, previousYear } = datesGenerator(body);\r\n\r\n        setDates([...dates]);\r\n        setCalendar({\r\n            ...calendar,\r\n            month: calendar.previousMonth,\r\n            year: calendar.previousYear,\r\n            nextMonth,\r\n            nextYear,\r\n            previousMonth,\r\n            previousYear\r\n        });\r\n    }\r\n\r\n    const onSelectDate = (date) => {\r\n        setSelectDate(date)\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setModal({\r\n            isShowModal: false,\r\n            type: ''\r\n        })\r\n    }\r\n\r\n    const onAdd = () => {\r\n        setModal({\r\n            isShowModal: true,\r\n            type: 'Добавить'\r\n        })\r\n    }\r\n\r\n    const onUpd = () => {\r\n        setModal({\r\n            isShowModal: true,\r\n            type: 'Обновить'\r\n        })\r\n    }\r\n\r\n\r\n    const dateElements = dates.length > 0 && dates.map((week, id_week) => {\r\n\r\n\r\n\r\n        return (\r\n            <Days\r\n                key={{ id_week }}\r\n                week={week}\r\n                id_week={id_week}\r\n                onSelectDate={onSelectDate}\r\n                events={events}\r\n                selectDate={selectDate}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className='calendar'>\r\n            {modal.isShowModal && (\r\n                <Modal\r\n                    selectDate={selectDate}\r\n                    addEvent={addEvent}\r\n                    updEvent={updEvent}\r\n                    type={modal.type}\r\n                    cancel={onCancel}\r\n                />)}\r\n            <div className='calendar-header'>\r\n                <div className='calendar-container'>\r\n                    <div>\r\n                        <div className='btn-prime' onClick={onAdd}>Добавить</div>\r\n                        <div className='btn-prime' onClick={onUpd}>Обновить</div>\r\n                    </div>\r\n                    <div className='calendar-search'>\r\n                        <Search />\r\n                        <div>\r\n                            <Filter events={events} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='calendar-table'>\r\n                <div className='calendar-container'>\r\n                    <div className='calendar-title'>\r\n                        <LeftBtn onClick={onClickPrev} className='calendar-title-child' />\r\n                        <span className='calendar-title-child'>{months[calendar.month] + ' ' + calendar.year}</span>\r\n                        <RightBtn onClick={onClickNext} className='calendar-title-child' />\r\n                        <div onClick={onClickToday} className='calendar-title-child calendar-today'>Сегодня</div>\r\n                    </div>\r\n                    <div>\r\n                        <table style={{ width: '100%' }}>\r\n                            <tbody>\r\n                                {dateElements}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Calendar);","\r\nconst SET_EVENT = 'SET_EVENT'\r\nconst UPD_EVENT = 'UPD_EVENT'\r\n\r\n\r\n\r\nlet initialState = {\r\n    events: [\r\n        { dateTime: '22.08.2021, 00:00:00', title: 'ДР!', name: \"Дима Молодцов\", uId: 1 },\r\n        { dateTime: '09.08.2021, 00:00:00', title: 'Встреча', name: \"Витя Костин, Петр Михайлов\", uId: 2 }\r\n    ]\r\n};\r\n\r\nconst calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_EVENT:\r\n            const uId = Math.max(state.events.map((event) => event.uid)) + 1 || 0;\r\n\r\n            return {\r\n                events: [\r\n                    ...state.events,\r\n                    { ...action.event, uId }\r\n                ],\r\n            };\r\n        case UPD_EVENT:\r\n            const newEvents = state.events.map((event) => {\r\n                if (event.uId === action.event.uId) {\r\n                    return { ...action.event }\r\n                } else {\r\n                    return { ...event }\r\n                }\r\n            })\r\n\r\n            return {\r\n                events: [...newEvents],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setEvent = (dateTime, title, name) => ({\r\n    type: SET_EVENT, event:\r\n        { dateTime, title, name }\r\n});\r\n\r\nexport const addEvent = (dateTime, title, name) => (dispatch) => {\r\n    dispatch(setEvent(dateTime, title, name));\r\n};\r\n\r\nexport const updEventInfo = (dateTime, title, name, uId) => ({\r\n    type: UPD_EVENT, event:\r\n        { dateTime, title, name, uId }\r\n});\r\n\r\nexport const updEvent = (dateTime, title, name, uId) => (dispatch) => {\r\n    dispatch(updEventInfo(dateTime, title, name, uId));\r\n};\r\n\r\nexport default calendarReducer;","import Calendar from './Calendar';\r\nimport { connect } from \"react-redux\";\r\nimport { addEvent, updEvent } from '../../redux/calendar-reducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        events: state.calendar.events,\r\n    }\r\n};\r\n\r\nconst CalendarContainer = connect(mapStateToProps, { addEvent, updEvent })(Calendar);\r\n\r\nexport default CalendarContainer;\r\n\r\n","import React, { useRef } from 'react';\r\n\r\n\r\nconst FriendsTbody = ({ user, onSetUserData, onSetEditMode, onSetActive }) => {\r\n\r\n    const nameEl = useRef(null);\r\n    const ageEl = useRef(null);\r\n    const genderEl = useRef(null);\r\n    const birthdayEl = useRef(null);\r\n\r\n\r\n\r\n    const onClick = (event) => {\r\n        event.stopPropagation();\r\n\r\n        if (user.isEdit) {\r\n            let newName = nameEl.current.value;\r\n            let newAge = ageEl.current.value;\r\n            let newGender = genderEl.current.value;\r\n            let newBirthday = birthdayEl.current.value;\r\n\r\n            onSetUserData(user.id, newName, newAge, newGender, newBirthday);\r\n        } else {\r\n            onSetEditMode(user.id);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr onClick={() => !user.isEdit && onSetActive(user.id)} className={user.isActive && 'friends-active'}>\r\n            <td className={`${user.isActive && 'friends-active'} friends-td-sticky`}>\r\n                <input ref={nameEl} type='text' disabled={!user.isEdit} defaultValue={user.name} />\r\n            </td>\r\n            <td><input ref={ageEl} type='number' disabled={!user.isEdit} defaultValue={user.age} /></td>\r\n            <td><input ref={genderEl} type='text' disabled={!user.isEdit} defaultValue={user.gender} /></td>\r\n            <td><input ref={birthdayEl} type='text' disabled={!user.isEdit} defaultValue={user.birthday} /></td>\r\n            <td >\r\n                <div onClick={onClick} className='btn-prime' style={{ padding: 0, width: 150 }}>\r\n                    {user.isEdit ? 'Сохранить' : 'Редактировать'}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n\r\n    );\r\n}\r\n\r\nexport default React.memo(FriendsTbody);","import React from 'react';\r\n\r\nimport './Friends.css';\r\nimport FriendsTbody from './tbody/FriendsTbody';\r\n\r\nconst Friends = ({ columns, users, onSetUserData, onSetEditMode, onSetActive }) => {\r\n\r\n    let tableColumns = [...columns, 'Действие'].map((i, id) => (\r\n        <td\r\n            className='friends-td-sticky'\r\n            style={{\r\n                position: id === 0 && 'sticky',\r\n                background: 'white',\r\n                zIndex: id === 0 && 100,\r\n                width: 300\r\n            }}\r\n        > {i}</td >))\r\n\r\n    let tbody = users.map((user) => (\r\n        <FriendsTbody\r\n            key={user.id}\r\n            user={user}\r\n            onSetUserData={onSetUserData}\r\n            onSetEditMode={onSetEditMode}\r\n            onSetActive={onSetActive} /\r\n        >));\r\n\r\n    let activeUsers = users.filter((u) => u.isActive);\r\n\r\n    return (\r\n        <div className='friends'>\r\n            <div className='friends-container'>\r\n                <div className='friends-table'>\r\n                    <div className='friends-table-body' >\r\n                        <table style={{ width: 900, minWidth: '100%', tableLayout: 'fixed' }}>\r\n                            <colgroup>\r\n                                <col style={{ width: 300 }} />\r\n                                <col style={{ width: 300 }} />\r\n                                <col style={{ width: 300 }} />\r\n                                <col style={{ width: 300 }} />\r\n                                <col style={{ width: 300 }} />\r\n                            </colgroup>\r\n                            <thead style={{ width: 900, minWidth: '100%', position: 'sticky ' }}>\r\n                                <tr>\r\n                                    {tableColumns}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tbody}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 20 }}>\r\n                        <p>\r\n                            Всего выбрано {activeUsers.length} полей\r\n                        </p>\r\n                        <p>\r\n                            Суммарный возраст: {activeUsers.reduce(((acc, cur) => +acc + (+cur.age)), 0)}\r\n                        </p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Friends);","import tableData from '../utils/table-data.json'\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst SET_EDIT_MODE = 'SET_EDIT_MODE'\r\nconst SET_ACTIVE_MODE = 'SET_ACTIVE_MODE'\r\n\r\n\r\nlet initialState = {\r\n    columns: tableData.columns,\r\n    users: tableData.users.map((i) => ({ ...i, isActive: false, isEdit: false }))\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            {\r\n                let newUsersData = state.users.map((user) => {\r\n                    return user.id === action.data.id ? { ...user, ...action.data, isEdit: !user.isEdit } : { ...user };\r\n                });\r\n\r\n                return {\r\n                    ...state,\r\n                    users: newUsersData\r\n                };\r\n            }\r\n        case SET_EDIT_MODE:\r\n            {\r\n                let newUsersData = state.users.map((user) => {\r\n                    return user.id === action.id ? { ...user, isEdit: !user.isEdit } : { ...user };\r\n                });\r\n\r\n                return { ...state, users: newUsersData };\r\n            }\r\n        case SET_ACTIVE_MODE:\r\n            {\r\n                let newUsersData = state.users.map((user) => {\r\n                    return user.id === action.id ? { ...user, isActive: !user.isActive } : { ...user };\r\n                });\r\n\r\n                return { ...state, users: newUsersData };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setUserData = (id, name, age, gender, birthday) => ({\r\n    type: SET_USER_DATA, data:\r\n        { id, name, age, gender, birthday }\r\n});\r\n\r\nexport const setEditMode = (id) => ({\r\n    type: SET_EDIT_MODE, id\r\n});\r\n\r\nexport const setActive = (id) => ({\r\n    type: SET_ACTIVE_MODE, id\r\n});\r\n\r\n\r\nexport const onSetUserData = (id, name, age, gender, birthday) => (dispatch) => {\r\n    dispatch(setUserData(id, name, age, gender, birthday));\r\n};\r\n\r\nexport const onSetEditMode = (id) => (dispatch) => {\r\n    dispatch(setEditMode(id));\r\n};\r\n\r\nexport const onSetActive = (id) => (dispatch) => {\r\n    dispatch(setActive(id));\r\n};\r\n\r\nexport default friendsReducer;","import Friends from './Friends';\r\nimport { connect } from \"react-redux\";\r\nimport { onSetUserData, onSetEditMode, onSetActive } from '../../redux/friends-reducer';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        columns: state.friends.columns,\r\n        users: state.friends.users,\r\n    }\r\n};\r\n\r\nconst FriendsContainer = connect(mapStateToProps, { onSetUserData, onSetEditMode, onSetActive })(Friends);\r\n\r\nexport default FriendsContainer;\r\n\r\n","import { MAIN_R, LOGIN_R, PROFILE_R, INFO_R, CALENDAR_R, FRIENDS_R } from './utils/consts'\r\nimport Main from \"./components/main/Main\";\r\nimport LoginContainer from './components/login/LoginContainer';\r\nimport Info from './components/info/Info';\r\nimport ProfileContainer from './components/profile/ProfileContainer';\r\nimport CalendarContainer from './components/calendar/CalendarContainer';\r\nimport TableContainer from './components/friends/FriendsContainer';\r\n\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: MAIN_R,\r\n        Component: Main\r\n    },\r\n    {\r\n        path: LOGIN_R,\r\n        Component: LoginContainer\r\n    }, {\r\n        path: INFO_R,\r\n        Component: Info\r\n    },]\r\n\r\nexport const privateRoutes = [\r\n    {\r\n        path: MAIN_R,\r\n        Component: Main\r\n    }, {\r\n        path: INFO_R,\r\n        Component: Info\r\n    }, {\r\n        path: PROFILE_R,\r\n        Component: ProfileContainer\r\n    },\r\n    {\r\n        path: LOGIN_R,\r\n        Component: LoginContainer\r\n    },\r\n    {\r\n        path: CALENDAR_R,\r\n        Component: CalendarContainer\r\n    },\r\n    {\r\n        path: FRIENDS_R,\r\n        Component: TableContainer\r\n    },\r\n]","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { privateRoutes, publicRoutes } from \"../routes\";\r\nimport { LOGIN_R, MAIN_R } from \"../utils/consts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nconst AppRouter = React.memo(({ isAuth}) => {\r\n\r\n    return isAuth ?\r\n        (\r\n            <Switch>\r\n                {privateRoutes.map(({ path, Component }) =>\r\n                    <Route key={path} path={path} component={Component} exact={true} />\r\n                )}\r\n                <Redirect to={MAIN_R} />\r\n            </Switch>\r\n        )\r\n        :\r\n        (\r\n            <Switch>\r\n                {publicRoutes.map(({ path, Component }) =>\r\n                    <Route key={path} path={path} component={Component} exact={true} />\r\n                )}\r\n                <Redirect to={LOGIN_R} />\r\n            </Switch>\r\n        )\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppRouter);","import React from 'react';\r\nimport { NavLink, HashRouter } from 'react-router-dom'\r\n\r\nimport { CALENDAR_R, FRIENDS_R, INFO_R, MAIN_R, PROFILE_R } from '../../utils/consts';\r\nimport './Header.css';\r\n\r\nconst Header = ({ username, isAuth, logout }) => {\r\n\r\n    let routes = [\r\n        { route: MAIN_R, name: 'Главная' },\r\n        { route: INFO_R, name: 'Информация' },\r\n        { route: PROFILE_R, name: 'Профиль' },\r\n        { route: CALENDAR_R, name: 'Календарь' },\r\n        { route: FRIENDS_R, name: 'Таблица друзей' },\r\n    ]\r\n\r\n    let navlink = routes.map((r, id) => {\r\n        return (\r\n            <NavLink\r\n                to={r.route}\r\n                exact\r\n                activeClassName=\"header-active\"\r\n                key={id}\r\n            >\r\n                {r.name}\r\n            </NavLink>)\r\n    })\r\n\r\n    return (\r\n        <div className='header'>\r\n\r\n            <HashRouter>\r\n                {navlink}\r\n                {isAuth\r\n                    ? (<div className='header-username' onClick={logout} data-title='Выйти'> {username} </div>)\r\n                    : (<div className='header-username' > {username} </div>)}\r\n            </HashRouter>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Header);","import Header from './Header';\r\nimport { logout } from '../../redux/auth-reducer'\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        username: state.auth.username || 'Гость',\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nconst HeaderContainer = connect(mapStateToProps, { logout })(Header);\r\n\r\nexport default HeaderContainer;\r\n\r\n","import AppRouter from \"./components/AppRouter\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\n\nimport { HashRouter } from 'react-router-dom'\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HeaderContainer />\n      <HashRouter>\n        <AppRouter />\n      </HashRouter>\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport authReducer from \"./auth-reducer\";\r\nimport calendarReducer from \"./calendar-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    calendar: calendarReducer,\r\n    friends: friendsReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}